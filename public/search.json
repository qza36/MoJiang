[{"title":"点对点文件传输工具：Wormhole","path":"/2023/04/21/点对点文件传输工具：Wormhole/","content":"今天介绍的是一款点对点的传输工具：Wormhole。今天要推荐给大家一款很实用的点对点传输工具，它就是Wormhole！首先，Wormhole可以直接在网页上使用，无需下载，非常便捷。其次，您无需注册账号，只需将生成的链接分享给需要发送文件的朋友即可，非常简单易用，而且也极易被人们接受。 使用Wormhole进行文件传输时，安全性是有保障的。它采用了端到端加密技术，保证了文件传输过程中的隐私安全。您发送的内容不会被任何人知道或发现。此外，Wormhole还支持自动删除功能，这能在一定程度上保证信息的安全性和隐私。 总而言之，Wormhole非常实用，使用方便，而且高保密性。大家不妨试一试，将来也许可以成为更多用户必备的传输工具之一。","tags":["分享"]},{"title":"使用Hexo搭建博客并部署在自己的服务器上","path":"/2023/04/15/使用hexo搭建博客及部署在自己的服务器上/","content":"前言 本教程将会教会你如何从本地进行博客调试然后推送到自己的服务器上，最后用户只需输入你的域名即可访问你的博客。 此教程需要一个外部服务器。 信息来源： Hexo官网：https://hexo.io/zh-cn/docs/ Archlinux官网（中国）：https://wiki.archlinuxcn.org/wiki/Nginx 只会玩辅助的博客：https://www.cnblogs.com/wangcuican/p/12522239.html 图床支持：https://imgloc.com/ 本地上的准备工作（Windows环境）安装Node.js 从官网下载Node.js 下载到本地后，默认安装就行 安装Hexo 打开cmd，输入npm install -g hexo-cli 看到以下内容就说明安装成功了 安装Git官网下载Git,下载完成后默认安装就可以了 服务器上的准备工作（Archlinux环境）[此步并没有什么卵用，可以滤过]购买服务器安装git pacman -S git 购买域名这里大家就随意发挥吧。 开始搭建博客本地搭建 本地搭建博客是为了更好的编写文章，相比服务器上枯燥的黑底白字，Windows上的编辑器用起来更加的舒服。而且，在本地可以及时查看博客生成的网页，并作出修改。万事俱备后，就可上传到服务器了。 搭建博客在本地上新建个文件夹，我命名为Blog，大家可以随便取名字。进入到Blog，然后在当前目录打开cmd。在CMD中输入hexo i此命令会在Blog文件夹中生成若干文件。接着输入hexo g待命令完成后，输入hexo s ，浏览器打开箭头所指的网址，要是看见hello，world说明本地搭建已经成功啦 新建博客在博客文件夹里打开CMD输入hexo n &lt;博客的标题&gt;，就会生成一个后缀名为md的文档。我们要编写那个文档，支持Markdown和html，内容编写好后就使用hexo g 来生成html文件，他们储存在/Blog/public里，你可以通过hexo s来查看实际的效果 使用Git来实现本地和服务器的同步，当然，你也可以直接使用FTP来传送文件。 建立本地仓库 进入Blog文件夹，鼠标右键，选择Git Bash Here 在git终端输入git init 将本地代码放入暂存区 ，输入 git add . (add 后有个点，别漏了) 输入git status 若文件都是绿色说明没有问题。 输入git commit -m ‘ 提交信息’ 把暂存区的文件放到版本库中 推送代码到Github 在github上建立一个库 生成并部署公钥 本机命令，生成公钥：ssh-keygen -t rsa -C “@.com” 邮箱可以任意填写本机命令，查看公钥：cat ~&#x2F;.ssh&#x2F;id_rsa.pub 查看之后然后copygithub线上添加公钥：项目仓库 &#x3D;&gt; settings &#x3D;&gt; SSH and GPG keys &#x3D;&gt; New SSH key 把生成的公钥填入即可。 本地仓库与远程仓库建立连接，添加远程源，这里我们采用ssh协议 git remote add origin &#103;&#x69;&#116;&#64;&#x67;&#x69;&#116;&#x68;&#x75;&#98;&#46;&#x63;&#111;&#x6d;:qza36&#x2F;PocchiBlog.git #origin是远程源的名字 提交本地仓库代码到远程仓库 git push -u origin master origin是远程源的源名，可以自定义；master是分支名，是默认的主分支 至此，本地搭建到推送代码到远程仓库教程已结束 服务器搭建新建博客 在/home目录下建立一个空文件夹,就叫Blog吧。 然后在终端输入git init 生成并部署公钥 本机命令，生成公钥：ssh-keygen -t rsa -C “@.com” 邮箱可以任意填写本机命令，查看公钥：cat ~&#x2F;.ssh&#x2F;id_rsa.pub 查看之后然后copygithub线上添加公钥：项目仓库 &#x3D;&gt; settings &#x3D;&gt; SSH and GPG keys &#x3D;&gt; New SSH key 把生成的公钥填入即可。 本地仓库与远程仓库建立连接，添加远程源，这里我们采用ssh协议 git remote add origin &#103;&#x69;&#116;&#64;&#x67;&#105;&#x74;&#x68;&#x75;&#98;&#46;&#99;&#x6f;&#x6d;:qza36&#x2F;PocchiBlog.git #origin是远程源的名字 拉取远程仓库代码 git pull origin master 代理服务器（Nginx）安装及配置 安装Nginx，pacman -S Nginx 修改配置文件，vim /etc/nginx/nginx.conf 找到以下内容，修改 root后面的内容。这个代码的意思是：Nginx会在 /home/blog/publc里寻找index.html index.html注意 : 不推荐将博客文件夹建立在操作系统root目录下，这样做可能会导致404错误。 修改后保存，然后在在终端输入nginx -s reload 记得打开防火墙 sudo ufw allow httpsudo ufw allow https 输入自己的域名就可以访问啦（前提是要把自己的域名解析到服务器哦） 注意事项 一定要hexo g后提交代码 不要在root目录下建博客文件夹！","tags":["教程"]},{"title":"Archlinux介绍","path":"/2023/04/14/Archlinux介绍/","content":"ArchLinux简介ArchLinux是一款轻量级、高度可定制的Linux发行版。相比于其他发行版，它更侧重于提供基础软件包和快速滚动更新，而不是为用户预装大量软件。 优点简洁快速ArchLinux体积较小，核心只安装了最基本的文件和驱动程序，并具有先进的软件包管理系统。这使得操作系统整体性能非常高，并且可以节省处理器和内存资源。 高定制性ArchLinux可自定义程度极高，用户可以根据需要选择安装或卸载特定的应用程序或服务。 另外，ArchLinux还提供灵活的网络配置选项，并支持多种文件系统格式，如Btrfs、XFS、EXT4等。 安全稳定由于会定期发布一组新软件包集合，因此应用程序保持新鲜， 同时，社区也对ArchLinux进行分析和测试，以确保所有的软件库都可靠。 此外，ArchLinux使用Sudo命令来授予和限制管理员权限，从而在保证系统准入时堡垒原则不必牺牲自由。 该博客被部署在运行Arch Linux的服务器上如果您对ArchLinux感兴趣并想了解更多信息，请访问官方网站：https://www.archlinux.org/。"},{"title":"关于我","path":"/about/index.html","content":"我本无意惹惊鸿，奈何惊鸿入我心。"}]